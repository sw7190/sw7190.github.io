{"version":3,"sources":["common/style.ts","common/constant.ts","reducers/list/types.ts","fetches/vote.ts","reducers/list/actions.ts","reducers/user/types.ts","reducers/user/actions.ts","hooks/useGetLoginUser.ts","hooks/useList.ts","components/common/Spinner.tsx","components/common/Loading.tsx","components/common/Button.tsx","components/list/ListItem.tsx","components/list/index.tsx","hooks/useDetail.ts","components/detail/index.tsx","hooks/useCreate.ts","components/create/index.tsx","components/common/Layout/Header.tsx","components/common/Layout/index.tsx","data/users.ts","hooks/useLogin.ts","components/auth/Login.tsx","App.tsx","reducers/list/index.ts","reducers/user/index.ts","reducers/index.ts","index.tsx"],"names":["Colors","EMessages","EPages","flexCenterStyle","css","EListReducerActions","getVoteById","id","Promise","resolve","setTimeout","data","localStorage","getItem","findedVote","JSON","parse","find","vote","isClose","Date","endAt","voteList","map","voteItem","title","count","createVote","v4","push","setItem","stringify","removeVoteById","user","findedVoteIndex","findIndex","creator","voteCountListdata","voteCountList","splice","filter","voteCount","voteId","addVoteCount","index","getVoteCountById","filteredVote","EUserReducerActions","initUserAction","payload","type","INIT","useGetLoginUser","sessionUser","sessionStorage","dispatch","useDispatch","useEffect","undefined","useList","list","useSelector","store","useState","loading","setLoading","a","console","log","onRemove","useCallback","alert","FAILED_REMOVE_VOTE","SUCCESS_REMOVE_VOTE","REMOVE","spin","keyframes","Spinner","styled","div","primary","white","LoadingWrapper","Loading","Button","button","attrs","fillColor","fontColor","borderColor","size","ListItemContainer","placeholder","Title","h3","black","ListItemInfo","disabled","red","Description","ListItem","history","useHistory","onClick","DETAIL_PAGE","className","onClickCapture","React","memo","ListContainer","ListWrapper","List","length","useDetail","setVote","selectedVoteItemIndex","setSelectVoteItemIndex","isVoted","setVoted","voteCountLength","setVoteCountLength","FAILED_LOAD_VOTE_DETAIL","LIST_PAGE","findedUserSelect","onSelectVoteItem","onVote","FAILED_ADD_VOTE_COUNT","SUCCESS_ADD_VOTE_COUNT","before","copy","voteResult","useMemo","reduce","prev","cur","DetailContainer","VoteItem","yellow","props","percentage","VoteItemWrapper","RowWrapper","Detail","useRouteMatch","params","useCreate","date","form","setForm","setVoteList","onChange","e","target","name","value","FAILED_CHANGE_DATE","onVoteChange","slice","onAddVoteList","onCreate","formCheck","trim","voteListCheck","some","FAILED_CREATE_VOTE","SUCCESS_CREATE_VOTE","CreateContainer","AddVoteButton","AddVoteWrapper","Create","HeaderContainer","header","Logo","h1","Header","location","useLocation","pathname","CREATE_PAGE","Container","LayoutContainer","MainContainer","PageTitle","h2","ContentContainer","section","Layout","children","users","password","useLogin","onLogin","FAILED_LOGIN","Login","App","to","LOGIN_PAGE","path","defaultState","listReducer","state","action","voteListItem","userReducer","combineReducers","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c65347fc.chunk.js","sourcesContent":["import { css } from 'styled-components';\n\nexport enum Colors {\n\tprimary = '#1249B7',\n\tblack = '#272727',\n\twhite = '#fff',\n\tred = '#FF466C',\n\tplaceholder = '#eee',\n\tdisabled = '#BABCC2',\n\tyellow = '#FFE650',\n}\n\nexport const flexCenterStyle = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;","export enum EMessages {\n  // CREATE\n  FAILED_CHANGE_DATE = '오늘 날짜보다 큰 날짜를 선택해주세요.',\n  FAILED_CREATE_VOTE = '항목을 모두 입력해주세요.',\n  SUCCESS_CREATE_VOTE = '작성되었습니다.',\n  // LOGIN\n  FAILED_LOGIN = '아이디 또는 비밀번호가 틀렸습니다.',\n  // DETAIL\n  FAILED_LOAD_VOTE_DETAIL = '투표를 불러오는데 실패했습니다.',\n  FAILED_ADD_VOTE_COUNT = '해당 투표에 이미 투표하셨습니다.',\n  SUCCESS_ADD_VOTE_COUNT = '투표에 성공했습니다.',\n  // LIST\n  FAILED_REMOVE_VOTE = '투표 삭제에 실패했습니다.',\n  SUCCESS_REMOVE_VOTE = '투표 삭제에 성공했습니다.',\n}\n\nexport enum EPages {\n  CREATE_PAGE = '/create',\n  LIST_PAGE = '/list',\n  DETAIL_PAGE = '/detail',\n  LOGIN_PAGE = '/login',\n}","export enum EListReducerActions {\n  INIT = `LIST/INIT`,\n  REMOVE = `LIST/REMOVE`\n}\n\n","import { ICreateVote, IVote, IVoteCount, IVoteListItem } from \"../common/types\";\nimport { v4 } from 'uuid';\n\nconst getVoteList = () => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteList');\n    const voteList: IVoteListItem[] = data ? JSON.parse(data) : [];\n    \n    resolve(voteList.map((vote) => {\n      vote.isClose = new Date() >= new Date(vote.endAt) \n      return vote;\n    }));\n  }, 100);\n});\n\nconst getVoteById = (id: string) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteList');\n    const voteList: IVoteListItem[] = data ? JSON.parse(data) : [];\n    const findedVote = voteList.find((vote) => vote.id === id);\n    let vote = null;\n    if (findedVote) {\n      findedVote.isClose = new Date() >= new Date(findedVote.endAt) \n      vote = {\n        ...findedVote,\n        voteList: (findedVote as any).voteList.map((voteItem: string[]) => ({\n          title: voteItem,\n          count: 0,\n        }))\n      }\n    }\n    resolve(vote as IVote);\n  }, 100);\n});\n\nconst createVote = (vote: ICreateVote) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteList');\n    vote.id = v4();\n    const voteList = data ? JSON.parse(data) : [];\n    voteList.push(vote);\n    localStorage.setItem('voteList', JSON.stringify(voteList));\n    resolve(true);\n  }, 100);\n});\n\nconst removeVoteById = (id: string, user: string) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteList');\n    const voteList: IVoteListItem[] = data ? JSON.parse(data) : [];\n    const findedVoteIndex = voteList.findIndex((vote) => vote.id === id);\n    if (findedVoteIndex === -1) {\n      resolve(false);\n    }\n    if (voteList[findedVoteIndex].creator !== user) {\n      resolve(false);\n    }\n    const voteCountListdata = localStorage.getItem('voteCountList');\n    const voteCountList: IVoteCount[] = voteCountListdata ? JSON.parse(voteCountListdata) : [];\n    voteList.splice(findedVoteIndex, 1);\n    localStorage.setItem('voteCountList', JSON.stringify(voteCountList.filter((voteCount) => voteCount.voteId !== id)));\n    localStorage.setItem('voteList', JSON.stringify(voteList));\n    resolve(true);\n  }, 100);\n});\n\nconst addVoteCount = (id: string, index: number, user: string) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteCountList');\n    const voteCountList: IVoteCount[] = data ? JSON.parse(data) : [];\n    const findedVote = voteCountList.find((voteCount) => voteCount.voteId === id && voteCount.user === user);\n    if (findedVote) {\n      resolve(false);\n    }\n    voteCountList.push({\n      index,\n      user: user,\n      voteId: id\n    })\n    localStorage.setItem('voteCountList', JSON.stringify(voteCountList));\n    resolve(true);\n  }, 100);\n});\n\nconst getVoteCountById = (id: string) => new Promise((resolve) => {\n  setTimeout(() => {\n    const data = localStorage.getItem('voteCountList');\n    const voteCountList: IVoteCount[] = data ? JSON.parse(data) : [];\n    const filteredVote = voteCountList.filter((voteCount) => voteCount.voteId === id);\n\n    resolve(filteredVote);\n  }, 100);\n});\n\nexport {\n  getVoteList,\n  getVoteById,\n  createVote,\n  removeVoteById,\n  addVoteCount,\n  getVoteCountById\n};","import { IVoteListItem } from \"../../common/types\";\nimport { EListReducerActions } from \"./types\";\n\nexport const initListAction = (payload: IVoteListItem[]) => ({\n  type: EListReducerActions.INIT,\n  payload,\n});\n\nexport const removeVoteAction = (payload: string) => ({\n  type: EListReducerActions.REMOVE,\n  payload,\n})","export enum EUserReducerActions {\n  INIT = `USER/INIT`,\n}\n","import { EUserReducerActions } from \"./types\";\n\nexport const initUserAction = (payload: string) => ({\n  type: EUserReducerActions.INIT,\n  payload,\n})","import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { initUserAction } from \"../reducers/user/actions\";\n\nconst useGetLoginUser = () => {\n  const sessionUser = sessionStorage.getItem('user');\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    if (sessionUser) dispatch(initUserAction(sessionUser));\n  }, [dispatch, sessionUser]);\n\n  return sessionUser ? sessionUser : undefined;\n};\n\nexport default useGetLoginUser;","import {  useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { EMessages } from \"../common/constant\";\nimport { IVoteListItem } from \"../common/types\";\nimport { getVoteList, removeVoteById } from \"../fetches/vote\";\nimport { initListAction, removeVoteAction } from \"../reducers/list/actions\";\nimport { IStoreState } from \"../reducers/types\";\nimport useGetLoginUser from \"./useGetLoginUser\";\n\nconst useList = () => {\n  const list = useSelector((store: IStoreState) => store.list);\n  const user = useGetLoginUser();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const voteList = await getVoteList() as IVoteListItem[];\n        dispatch(initListAction(voteList));\n      } catch(e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    })()\n  }, [dispatch]);\n\n  const onRemove = useCallback((id: string) => async () => {\n    if (!user) return;\n    const success = await removeVoteById(id, user);\n    if (!success) {\n      alert(EMessages.FAILED_REMOVE_VOTE);\n      return;\n    }\n    alert(EMessages.SUCCESS_REMOVE_VOTE);\n    dispatch(removeVoteAction(id));\n  }, [user, dispatch]);\n\n  return {\n    list,\n    loading,\n    user,\n    onRemove,\n  }\n};\n\nexport default useList;","import styled, { keyframes } from \"styled-components\";\nimport { Colors } from \"../../common/style\";\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst Spinner = styled.div`\n    font-size: 10px;\n    margin: 50px auto;\n    width: 11em;\n    height: 11em;\n    border-radius: 50%;\n    background: ${Colors.primary};\n    background: linear-gradient(to right, ${Colors.primary} 10%, rgba(255, 255, 255, 0) 42%);\n    position: relative;\n    animation: ${spin} 1.4s infinite linear;\n    transform: translateZ(0);\n  &:before {\n    width: 50%;\n    height: 50%;\n    background: ${Colors.primary};\n    border-radius: 100% 0 0 0;\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n  }\n  &:after {\n    background: ${Colors.white};\n    width: 75%;\n    height: 75%;\n    border-radius: 50%;\n    content: '';\n    margin: auto;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n  }\n\n`;\n\nexport default Spinner;","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors, flexCenterStyle } from '../../common/style';\nimport Spinner from './Spinner';\n\nconst LoadingWrapper = styled.div`\n  ${flexCenterStyle}\n  position: absolute;\n  background-color: ${Colors.white};\n  width: 100%;\n  height: 100%;\n`;\nconst Loading: React.FC = () => {\n  return (\n    <LoadingWrapper>\n      <Spinner/>\n    </LoadingWrapper>\n  )\n}\n\nexport default Loading;\n","import styled from 'styled-components';\nimport { Colors, flexCenterStyle } from '../../common/style';\n\ninterface IButtonProps {\n\tfillColor?: Colors;\n\tfontColor?: Colors;\n\tborderColor?: Colors;\n\tsize?: 'small' | 'medium' | 'large';\n}\nconst Button = styled.button.attrs(() => ({\n\ttype: 'button',\n}))<IButtonProps>`\n\t${flexCenterStyle}\n\tfont-size: 14px;\n\tcursor: pointer;\n\ttransition: all .3s, color 1s;\n\tuser-select: none;\n\twhite-space: nowrap;\n\tcolor: #fff;\n\tbox-shadow: 0px 3px 6px #00000029;\n\ttransition: .2s;\n\tborder-radius: 24px;\n\tpadding: 14px 24px;\n\tcursor: pointer;\n\n\tbackground-color: ${({fillColor}) => fillColor ? fillColor : Colors.primary};\n\tcolor: ${({ fontColor }) => fontColor ? fontColor : Colors.white};\n\t${({ borderColor }) => (borderColor ? `border: 2px solid ${borderColor};` : 'border: none;')}\n\n\t${({ size }) => {\n\t\tif (size === 'large') {\n\t\t\treturn `\n\t\t\theight: 48px;\n\t\t\tpadding: 14px 24px;\n\t\t\t`;\n\t\t}\n\n\t\tif (size === 'medium') {\n\t\t\treturn `\n\t\t\twidth: 130px;\n\t\t\theight: 48px;\n\t\t\tpadding: 14px 24px;\n\t\t\t`;\n\t\t}\n\n\t\tif (size === 'small') {\n\t\t\treturn `\n\t\t\twidth: 80px;\n\t\t\theight: 36px;\n\t\t\tpadding: 8px 24px;\n\t\t\t`;\n\t\t}\n\n\t\treturn '';\n\t}}\n\n\n`;\n\nexport default Button;","import React from 'react';\nimport { useHistory } from 'react-router';\nimport styled from 'styled-components';\nimport { EPages } from '../../common/constant';\nimport { Colors } from '../../common/style';\nimport Button from '../common/Button';\n\nconst ListItemContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  cursor: pointer;\n  border-bottom: 1px solid ${Colors.placeholder};\n  width: 100%;\n  padding: 10px;\n\n  > ${Button} {\n    margin-top: 20px;\n  }\n`;\n\nconst Title = styled.h3`\n  font-size: 17px;\n  color: ${Colors.black};\n  margin-bottom: 10px;\n`;\n\nconst ListItemInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  & span {\n    font-size: 12px;\n    color: ${Colors.disabled};\n\n    &.status {\n      color: #00FF00;\n      \n      &.end {\n        color: ${Colors.red};\n      }\n    }\n  }\n`;\nconst Description = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\ninterface IVoteListItemProps {\n  id: string;\n\ttitle: string;\n\tendAt: string;\n\tcreator: string;\n\tisClose?: boolean;\n  onRemove?: () => void;\n}\nconst ListItem: React.FC<IVoteListItemProps> = ({\n  creator, endAt, id, title, isClose, onRemove\n}) => {\n  const history = useHistory();\n  return (\n    <ListItemContainer>\n      <div onClick={() => history.push(`${EPages.DETAIL_PAGE}/${id}`)}>\n        <Title>{title}</Title>\n        <ListItemInfo>\n          <Description>\n            <span className=\"creator\">{creator}</span>\n            <div>\n              <span>마감: </span>\n              <span>{endAt}</span>\n            </div>\n          </Description>\n          <span className={`status ${isClose ? 'end' : ''}`}>{isClose ? '종료' : '진행 중'}</span>\n      </ListItemInfo>\n      </div>\n      {\n        onRemove && (\n          <Button onClickCapture={onRemove} fillColor={Colors.red}>삭제</Button>\n        )\n      }\n    </ListItemContainer>\n  )\n}\n\nexport default React.memo(ListItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../common/style';\nimport useList from '../../hooks/useList';\nimport Loading from '../common/Loading';\nimport ListItem from './ListItem';\n\nconst ListContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst ListWrapper = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  border: 1px solid ${Colors.placeholder};\n`;\n\nconst List: React.FC = () => {\n  const { list, loading, onRemove, user } = useList();\n  \n  return (\n    <ListContainer>\n        {loading && (<Loading/>)}\n        <ListWrapper>\n          {list.length === 0 && (\n            <p>투표가 존재하지 않습니다.</p>\n          )}\n          {\n            list.map((vote) => (\n              <ListItem\n                key={vote.id}\n                title={vote.title}\n                creator={vote.creator}\n                endAt={vote.endAt}\n                id={vote.id}\n                isClose={vote.isClose}\n                onRemove={user === vote.creator ? onRemove(vote.id) : undefined}\n              />\n            ))\n          }\n        </ListWrapper>\n    </ListContainer>\n  )\n}\n\nexport default List;\n","import {  useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { EMessages, EPages } from \"../common/constant\";\nimport { IVote, IVoteCount } from \"../common/types\";\nimport { addVoteCount, getVoteById, getVoteCountById, } from \"../fetches/vote\";\nimport useGetLoginUser from \"./useGetLoginUser\";\n\nconst useDetail = (id: string) => {\n  const [vote, setVote] = useState<IVote | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedVoteItemIndex, setSelectVoteItemIndex] = useState(-1);\n  const [isVoted, setVoted] = useState(true);\n  const [voteCountLength, setVoteCountLength] = useState(0);\n  const dispatch = useDispatch();\n  const user = useGetLoginUser();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!id) return;\n    (async () => {\n      try {\n        setLoading(true);\n        const vote = await getVoteById(id) as IVote | null;\n        if (!vote) {\n          alert(EMessages.FAILED_LOAD_VOTE_DETAIL);\n          history.push(EPages.LIST_PAGE);\n          return;\n        }\n        const voteCountList = await getVoteCountById(id) as IVoteCount[];\n        vote.voteList = vote.voteList.map((voteItem, index) => {\n          voteItem.count = voteCountList.filter((voteCount) => voteCount.index === index).length;\n          return voteItem;\n        })\n        setVoteCountLength(voteCountList.length)\n        const findedUserSelect = voteCountList.find((voteCount) => voteCount.user === user);\n        if (findedUserSelect) {\n          setSelectVoteItemIndex(findedUserSelect.index);  \n        }\n        setVoted(findedUserSelect ? true : false);\n        setVote(vote)\n      } catch(e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    })()\n  }, [dispatch, id, user, history]);\n\n  const onSelectVoteItem = useCallback((index: number) => () => {\n    setSelectVoteItemIndex(index);\n  }, []);\n\n  const onVote = useCallback(async () => {\n    if (selectedVoteItemIndex === -1) {\n      return;\n    }\n    const success = await addVoteCount(id,selectedVoteItemIndex, user!);\n    if (!success) {\n      alert(EMessages.FAILED_ADD_VOTE_COUNT);\n      return;\n    }\n    alert(EMessages.SUCCESS_ADD_VOTE_COUNT);\n    setVoted(true);\n    setVoteCountLength((before) => before + 1);\n    setVote((before) => {\n      if (before) {\n        const copy = {...before};\n        copy.voteList = before.voteList.map((voteItem, index) => ({\n          title: voteItem.title,\n          count: index === selectedVoteItemIndex ? voteItem.count + 1 : voteItem.count,\n        }));\n        return copy;\n      }\n      return before;\n    });\n\n  }, [user, id, selectedVoteItemIndex]);\n\n  const voteResult = useMemo(() => {\n    if (!vote) return undefined;\n    if (!vote.isClose) return undefined;\n    \n    const max = vote.voteList.reduce((prev, cur) => prev.count > cur.count ? prev : cur);\n    return max;\n  }, [vote]);\n\n  return {\n    vote,\n    loading,\n    selectedVoteItemIndex,\n    isVoted,\n    voteCountLength,\n    voteResult,\n    onSelectVoteItem,\n    onVote,\n  }\n};\n\nexport default useDetail;","import React from 'react';\nimport { useRouteMatch } from 'react-router';\nimport styled from 'styled-components';\nimport { Colors } from '../../common/style';\nimport useDetail from '../../hooks/useDetail';\nimport Button from '../common/Button';\nimport Loading from '../common/Loading';\n\n\nconst DetailContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding: 20px;\n  \n  > h2 {\n    font-size: 20px;\n    margin-bottom: 20px;\n  }\n  > ${Button} {\n    margin-top: 10px;\n    width: 150px;\n    align-self: center;\n  }\n`;\n\nconst VoteItem = styled.div<{percentage?:number}>`\n  background-color: ${Colors.placeholder};\n  border-radius: 5px;\n  padding: 10px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  width: 90%;\n  height: 100%;\n\n  &.active {\n    background-color: ${Colors.yellow};\n  }\n\n  ::before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    transform: translateX(${(props) => props.percentage ? `-${100 - props.percentage}%` : '100%' });\n    background-color: ${Colors.yellow};\n  }\n\n  > span {\n    position: relative;\n  }\n`;\n\nconst VoteItemWrapper = styled.div`\n  position: relative;\n  display: flex;\n  margin-top: 15px;\n  > span {\n    position: absolute;\n    &.selected {\n      left: -20px;\n      top: 50%;\n      transform: translateY(-50%);\n      border-radius: 100%;\n      background-color: ${Colors.primary};\n      width: 10px;\n      height: 10px;\n    }\n    &.count {\n      right: 0px;\n      top: 10px;\n      font-size: 12px;\n      color: ${Colors.disabled};\n    }\n  }\n`;\nconst RowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;  \n  > span {\n    font-weight: bold;\n    font-size: 14px;\n    color: ${Colors.black};\n  }\n`;\n\nconst Detail: React.FC = () => {\n  const { id } = useRouteMatch<{id: any}>().params;\n  const {\n    vote,\n    selectedVoteItemIndex,\n    isVoted,\n    voteCountLength,\n    loading,\n    voteResult,\n    onSelectVoteItem,\n    onVote\n  } = useDetail(id);\n  return (\n    <DetailContainer>\n       {loading && (<Loading/>)}\n      { \n        !vote ? (\n          <h2>투표가 존재하지 않습니다.</h2>\n        ) : (\n          <>\n            <h2>{vote.title}</h2>\n            <RowWrapper>\n              <span>투표 항목</span>\n              {\n                vote.voteList.map((voteItem, index) => (\n                  <VoteItemWrapper key={`${id}-voteItem-${index + 1}`} >\n                    <VoteItem \n                      onClick={!isVoted && !vote.isClose ? onSelectVoteItem(index) : undefined}\n                      percentage={isVoted || vote.isClose ? voteItem.count / voteCountLength * 100 : undefined}\n                      className={`vote-item ${!isVoted && !vote.isClose && selectedVoteItemIndex === index ? 'active' : ''}`}>\n                         <span>{voteItem.title}</span>\n                    </VoteItem>\n                        {\n                          (isVoted  || vote.isClose) && (\n                            <>\n                              {\n                                index ===  selectedVoteItemIndex && (\n                                  <span className=\"selected\"/>\n                                )\n                              }\n                              <span className=\"count\">{voteItem.count}명`</span>\n                            </>\n                          )\n                        }\n                  </VoteItemWrapper>\n                ))\n              }\n            </RowWrapper>\n            {\n              !isVoted && !vote.isClose && (\n                <Button onClick={onVote}>투표하기</Button>\n              )\n            }\n            {\n              voteResult && (\n                <>\n                  <p>\n                    투표가 종료되었습니다.\n                  </p>\n                  <p>결과: {voteResult.title}</p>\n                  <p>인원: {voteResult.count}명</p>\n                </>\n              )\n            }\n          </>\n        )\n      }\n  </DetailContainer>\n  )\n}\n\nexport default Detail;\n","import { ChangeEvent, useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { EMessages, EPages } from \"../common/constant\";\nimport { ICreateVote } from \"../common/types\";\nimport { createVote } from \"../fetches/vote\";\nimport useGetLoginUser from \"./useGetLoginUser\";\n\nconst useCreate = () => {\n  const [form, setForm] = useState({\n    title: '',\n    date: '',\n  });\n  const [voteList, setVoteList] = useState([\n    '',\n    '',\n    '',\n  ]);\n\n  const history = useHistory();\n  const user = useGetLoginUser();\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (name === 'date') {\n      if (new Date(value) <= new Date()) {\n        alert(EMessages.FAILED_CHANGE_DATE);\n        return;\n      }\n    }\n    setForm((before) => ({ ...before, [name]: value }));\n  }, []);\n\n  const onVoteChange = useCallback((index: number) => (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setVoteList((before) => {\n      const copy = before.slice();\n      copy[index] = value;\n      return copy;\n    });\n  }, []);\n\n  const onAddVoteList = useCallback(() => {\n    setVoteList((before) => {\n      const copy = before.slice();\n      copy.push('');\n      return copy;\n    });\n  }, []);\n\n  const onCreate = useCallback(async () => {\n    const formCheck = form.date.trim() === \"\" || form.title.trim() === \"\";\n    const voteListCheck = voteList.some((vote) => vote.trim() === \"\");\n    if (formCheck || voteListCheck) {\n      alert(EMessages.FAILED_CREATE_VOTE);\n      return;\n    }\n\n    const vote: ICreateVote = {\n      title: form.title,\n      endAt: form.date,\n      creator: user!,\n      voteList: voteList,\n    };\n    await createVote(vote);\n    alert(EMessages.SUCCESS_CREATE_VOTE);\n    history.push(EPages.LIST_PAGE);\n  }, [form, voteList, user, history]);\n\n  return {\n    form,\n    onChange,\n    voteList,\n    onVoteChange,\n    onAddVoteList,\n    onCreate,\n  }\n};\n\nexport default useCreate;","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors, flexCenterStyle } from '../../common/style';\nimport useCreate from '../../hooks/useCreate';\nimport Button from '../common/Button';\n\nconst CreateContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-bottom: 20px;\n  > ${Button} {\n    margin-top: 10px;\n    width: 150px;\n    align-self: center;\n  }\n`;\n\nconst RowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;  \n  > span {\n    font-weight: bold;\n    font-size: 14px;\n    color: ${Colors.black};\n  }\n  > input {\n    margin-top: 10px;\n    border: 1px solid ${Colors.disabled};\n    padding: 10px 5px;\n    border-radius: 5px;\n  }\n`;\n\nconst AddVoteButton = styled.button`\n  ${flexCenterStyle}\n  margin-top: 10px;\n  border-radius: 100%;\n  background-color: ${Colors.white};\n  border: 1px solid ${Colors.disabled};\n  color: ${Colors.disabled};\n  font-size: 30px;\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n`;\n\nconst AddVoteWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  > ${AddVoteButton} {\n    margin-right: 10px;\n  }\n  > span {\n    font-size: 14px;\n    color: ${Colors.disabled};\n  }\n`;\n\nconst Create: React.FC = () => {\n  const {\n    form,\n    onChange,\n    voteList,\n    onVoteChange,\n    onAddVoteList,\n    onCreate,\n  } = useCreate();\n\n  return (\n    <CreateContainer>\n      <RowWrapper>\n        <span>제목</span>\n        <input\n          onChange={onChange}\n          value={form.title}\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"제목을 입력하세요.\"\n        />\n      </RowWrapper>\n      <RowWrapper>\n        <span>투표 마감</span>\n        <input\n          onChange={onChange}\n          value={form.date}\n          name=\"date\"\n          type=\"date\"\n        />\n      </RowWrapper>\n      <RowWrapper>\n        <span>투표 항목</span>\n        {\n          voteList.map((vote, index) => (\n            <input\n              key={`create-vote-list-${index}`}\n              onChange={onVoteChange(index)}\n              value={vote}\n              name=\"vote\"\n              type=\"text\"\n              placeholder=\"항목을 입력하세요.\"\n            />\n          ))\n        }\n        <AddVoteWrapper>\n          <AddVoteButton onClick={onAddVoteList}>+</AddVoteButton>\n          <span>항목 추가</span>\n        </AddVoteWrapper>\n      </RowWrapper>\n      <Button onClick={onCreate}>작성</Button>\n    </CreateContainer>\n  )\n}\n\nexport default Create;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport { EPages } from '../../../common/constant';\nimport { Colors } from '../../../common/style';\nimport useGetLoginUser from '../../../hooks/useGetLoginUser';\nimport Button from '../Button';\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 80px;\n  background-color: ${Colors.white};\n  padding: 10px 25px;\n  box-shadow: 0px 3px 6px #00000029;\n  margin-bottom: 20px;\n  min-height: 80px;\n\n  ${Button} {\n    max-height: 100%;\n  }\n`;\n\nconst Logo = styled.h1`\n  color: ${Colors.black};\n  font-size: 25px;\n  cursor: pointer;\n`;\n\nconst Header: React.FC = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const user = useGetLoginUser();\n  return (\n    <HeaderContainer>\n      <Logo onClick={() => history.push(EPages.LIST_PAGE)}>\n        Vote\n      </Logo>\n      {\n        user && (\n          <span>{user}</span>\n        )\n      }\n      {\n        location.pathname !== EPages.CREATE_PAGE && user && (\n          <Button \n            fillColor={Colors.red} \n            onClick={() => history.push(EPages.CREATE_PAGE)}>\n            투표 작성\n          </Button>\n        )\n      }\n    </HeaderContainer>\n  )\n}\n\nexport default Header;","import React, { useMemo } from 'react';\nimport { useLocation } from 'react-router';\nimport styled from 'styled-components';\nimport { EPages } from '../../../common/constant';\nimport { Colors, flexCenterStyle } from '../../../common/style';\nimport Header from './Header';\n\nconst Container = styled.div`\n  ${flexCenterStyle}\n`\nconst LayoutContainer = styled.div`\n  width: 360px;\n  display: flex;\n  flex-direction: column;\n  height: 600px;\n  background-color: ${Colors.white};\n  overflow: auto;\n  box-shadow: 0px 3px 6px #00000029;\n\n  ::-webkit-scrollbar {\n     width: 5px;\n     border-radius: 10px;\n  }\n  ::-webkit-scrollbar-track { \n    background-color: transparent; \n  }\n  ::-webkit-scrollbar-thumb {\n     background-color: ${Colors.placeholder};\n     border-radius: 10px;\n  }\n  ::-webkit-scrollbar-button {\n     display: none;\n  }\n`;\n\nconst MainContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PageTitle = styled.h2`\n  color: ${Colors.black};\n  margin-bottom: 20px;\n  margin-left: 10px;\n`;\n\nconst ContentContainer = styled.section`\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst Layout: React.FC = ({children}) => {\n  const location = useLocation();\n  \n  const title = useMemo(() => {\n    switch(location.pathname) {\n      case EPages.CREATE_PAGE: {\n        return '투표 생성';\n      }\n      case EPages.LIST_PAGE: {\n        return '투표 목록';\n      }\n    }\n    return '';\n  }, [location.pathname]);\n\n  return (\n    <Container>\n    <LayoutContainer>\n      <Header/>\n      <MainContainer>\n        <PageTitle>\n          {title}\n        </PageTitle>\n        <ContentContainer>\n          {children}\n        </ContentContainer>\n      </MainContainer>\n    </LayoutContainer>\n    </Container>\n  )\n}\n\nexport default Layout;","const users = [\n  {\n    id: 'test1',\n    password: '1234',\n  },\n  {\n    id: 'test2',\n    password: '1234',\n  },\n  {\n    id: 'test2',\n    password: '1234',\n  },\n  {\n    id: 'test3',\n    password: '1234',\n  },\n  {\n    id: 'test4',\n    password: '1234',\n  },\n  {\n    id: 'test5',\n    password: '1234',\n  },\n]\nexport default users","import { ChangeEvent, useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { EMessages, EPages } from \"../common/constant\";\nimport users from \"../data/users\";\nimport { initUserAction } from \"../reducers/user/actions\";\nimport useGetLoginUser from \"./useGetLoginUser\";\n\nconst useLogin = () => {\n  const [form, setForm] = useState({\n    id: '',\n    password: '',\n  });\n  const dispatch = useDispatch();\n  const user = useGetLoginUser();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user) history.push(EPages.LIST_PAGE);\n  }, [user, history])\n\n\n  const onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setForm((before) => ({ ...before, [name]: value }));\n  }, []);\n  \n  const onLogin = useCallback(() => {\n    const user = users.find((user) => user.id === form.id && user.password === form.password);\n    if (!user) {\n      alert(EMessages.FAILED_LOGIN);\n      return;\n    }\n    dispatch(initUserAction(user!.id));\n    history.push(EPages.LIST_PAGE);\n  }, [form, dispatch, history]);\n  \n  return {\n    form,\n    onChange,\n    onLogin\n  }\n};\n\nexport default useLogin;","import React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../../common/style';\nimport useLogin from '../../hooks/useLogin';\nimport Button from '../common/Button';\n\nconst CreateContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  padding-bottom: 20px;\n  > ${Button} {\n    margin-top: 10px;\n    width: 150px;\n    align-self: center;\n  }\n`;\n\nconst RowWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;  \n  > span {\n    font-weight: bold;\n    font-size: 14px;\n    color: ${Colors.black};\n  }\n  > input {\n    margin-top: 10px;\n    border: 1px solid ${Colors.disabled};\n    padding: 10px 5px;\n    border-radius: 5px;\n  }\n`;\n\nconst Login: React.FC = () => {\n  const {\n    form,\n    onChange,\n    onLogin,\n  } = useLogin();\n\n  return (\n    <CreateContainer>\n       <RowWrapper>\n        <span>아이디</span>\n        <input\n          onChange={onChange}\n          value={form.id}\n          name=\"id\"\n          type=\"text\"\n          placeholder=\"아이디를 입력하세요.\"\n        />\n      </RowWrapper>\n      <RowWrapper>\n        <span>비밀번호</span>\n        <input\n          onChange={onChange}\n          value={form.password}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"비밀번호을 입력하세요.\"\n        />\n      </RowWrapper>\n      <Button onClick={onLogin}>로그인</Button>\n    </CreateContainer>\n  )\n}\n\nexport default Login;\n","import React from 'react';\nimport {BrowserRouter, Redirect, Route} from 'react-router-dom';\nimport List from './components/list';\nimport Detail from './components/detail';\nimport Create from './components/create';\nimport Layout from './components/common/Layout';\nimport { EPages } from './common/constant';\nimport Login from './components/auth/Login';\nimport useGetLoginUser from './hooks/useGetLoginUser';\n\nconst App: React.FC = () => {\n  const user = useGetLoginUser();\n  \n  return (\n    <BrowserRouter>\n      <Layout>\n        {\n          !user && (<Redirect to={EPages.LOGIN_PAGE}/>) \n        }\n        <Route path={EPages.LIST_PAGE}>\n          <List/>\n        </Route>\n        <Route path={`${EPages.DETAIL_PAGE}/:id`}>\n          <Detail/>\n        </Route>\n        <Route path={EPages.CREATE_PAGE}>\n          <Create/>\n        </Route>\n        <Route path={EPages.LOGIN_PAGE}>\n          <Login/>\n        </Route>\n      </Layout>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import { IVoteListItem } from \"../../common/types\";\nimport { IActionType } from \"../types\";\nimport { EListReducerActions } from \"./types\";\n\nconst defaultState: IVoteListItem[] = [];\n\nconst listReducer = (state = defaultState, action: IActionType) => {\n  const { type, payload } = action;\n  switch(type) {\n    case EListReducerActions.INIT: \n      state = payload;\n      return state;\n    case EListReducerActions.REMOVE: \n      console.log(state.filter((voteListItem) => voteListItem.id !== payload));\n      state = [...state.filter((voteListItem) => voteListItem.id !== payload)];\n      return state;\n  }\n  return state;\n}\n\nexport default listReducer;","import { IActionType } from \"../types\";\nimport { EUserReducerActions } from \"./types\";\n\nconst defaultState: string = '';\n\nconst userReducer = (state = defaultState, action: IActionType) => {\n  const { type, payload } = action;\n  switch(type) {\n    case EUserReducerActions.INIT: \n      state = payload;\n      sessionStorage.setItem('user', payload);\n      return state;\n  }\n  return state;\n}\n\nexport default userReducer;","import { combineReducers } from 'redux';\nimport listReducer from './list'\nimport userReducer from './user'\n\nexport default combineReducers({\n  list: listReducer,\n  user: userReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}